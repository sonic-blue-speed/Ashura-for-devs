
//-------------------------------------------------------//
// Monitor (a.k.a. Item Box)                             //
//-------------------------------------------------------//

// Monitor types (stored in objA0.subtype2c and objA0.state):
//  0x00 = Static, works like Robotnik
//  0x01 = Extra Life
//  0x02 = Robotnik
//  0x03 = Rings
//  0x04 = Speed Shoes
//  0x05 = Fire Shield
//  0x06 = Lightning Shield
//  0x07 = Water Shield
//  0x08 = Invincibility
//  0x09 = "Super" monitor (debug only)
//  0x0a = Already broken, too bad...
//  0x0b = Classic Shield (Standalone only)
//  0x10 = Flag that marks shield monitors that should be a Classic Shield when having all shield types active (Standalone only)

function u8 Monitor.getRandomizedType(u8 type, bool hiddenMonitor)
{
	if (global.xtrachar == 168)
	{
		if (type >= 0x05 && type <= 0x07 || type == 0x0b)
			type = 0x03
	}
	
	return base.Monitor.getRandomizedType(type, hiddenMonitor)
}

//gumball
//# address-hook(0x0612a8) end(0x0612de)
function void fn0612a8()
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.fn0612a8()
		return
	}
	
	u8 rnd = getRandomNumber() & 0x0f

	// This code makes sure you can't get more than one 1-up per run of the Gumball Machine stage
	if (rnd == 0)
	{
		A1 = 0xffff0000 + u16[A0 + 0x46]
		if (u8[A1 + 0x38] & 0x80)
		{
			// We had one already, now switch to a black bubble instead
			rnd = 3
		}
		else
		{
			// Allow 1-up
			u8[A1 + 0x38] |= 0x80
		}
	}

	// Set bonus bubble content and sprite based on the previous chosen random value
	u8 bubbleType = u8[0x0612e0 + rnd]

#if STANDALONE
	// Don't spawn 1-ups with the infinite lives setting on, instead replace with a ring bubble
	if (bubbleType == 0x00 && Game.getSetting(SETTING_INFINITE_LIVES))
		bubbleType = 0x02
#endif

	if (bubbleType >= 0x05 && bubbleType >= 0x07)
		bubbleType = 0x02

	// Bubble types:
	//  0x00 = 1-up bubble
	//  0x01 = Rep bubble
	//  0x02 = Ring bubble
	//  0x03 = Empty bubble
	//  0x04 = Bouncy black bubble
	//  0x05 = Fire shield
	//  0x06 = Bubble shield
	//  0x07 = Lightning shield
	//  0x08 = Unused golden "Super bubble"
	objA0.subtype2c = bubbleType
	if (bubbleType == 0x04)
	{
		// Bouncy black bubble hitbox
		objA0.collision_attributes = (collision.flag.SPECIAL | collision.size.8x8_2)
	}
	u32[A0 + 0x30] = u32[0x0612f0 + bubbleType * 4]
}

//glowing spheres
//# address-hook(0x04a238) end(0x04a284)
function void fn04a238()
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.fn04a238()
		return
	}
	
	if (u8[A0 + 0x29] == 0)
	{
		objA0.animation.sprite = 0
		playSound(0x65)

		D1.u16 = (u8[A0 + 0x14] & 0x0f) * 4
		D0.u16 = D1.u16 + (level.framecounter & 0x03)
		objA0.subtype2c = u8[0x1e4484 + D0.u16]
	#if STANDALONE
		// Don't spawn 1-ups with the infinite lives setting on, instead replace with a ring bubble
		if (objA0.subtype2c == 1 && Game.getSetting(SETTING_INFINITE_LIVES))
			objA0.subtype2c = 3
	#endif
		
		if (objA0.subtype2c >= 5 && objA0.subtype2c <= 7)
			objA0.subtype2c = 3

		objA0.update_address = 0x04a34c
		fn04a2cc()
	}
	else
	{
		u8[A0 + 0x29] = 0
		Object.animationUpdate(0x04a288)
		fn04a31a()
	}
}

//# address-hook(0x0611d6) end(0x0611fa)
function void fn0611d6()
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.fn0611d6()
		return
	}
	
	fn06114e()
}

//# address-hook(0x061200) end(0x061224)
function void fn061200()
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.fn061200()
		return
	}
	
	fn06114e()
}

//# address-hook(0x06122a) end(0x06124e)
function void fn06122a()
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.fn06122a()
		return
	}
	
	fn06114e()
}


//monitors again
function void ItemEffect.applyShield(u8 shieldType, u32 updateRoutine, u8 soundId)
{
	if (char.character != CHARACTER_SONIC || ((!competition_mode.active && global.xtrachar != 168) || (competition_mode.active && competition.xtrachar != 168)))
	{
		base.ItemEffect.applyShield(shieldType, updateRoutine, soundId)
		return
	}
	ItemEffect.ApplyExtraRings()
}